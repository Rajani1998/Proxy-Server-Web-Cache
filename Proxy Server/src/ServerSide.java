import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mehdi Raza Rajani
 */
public class ServerSide extends javax.swing.JFrame {    
    static int port = 35050;
    static ServerSocket ss;
    static DataInputStream in;
    static DataOutputStream out;
    static PrintStream dos;
    static DefaultTableModel model_info;

    
    static LRU cache = new LRU();
    /**
     * Creates new form ServerSide
     */
    public ServerSide() {
        initComponents();
        model_info = (DefaultTableModel) cacheTable.getModel();        
    }
    
    class urlThread extends Thread {
        int i;

        public urlThread(int i) {
            this.i = i;
            this.start();
        }
        
        @Override
        public synchronized void start() {
            super.start(); //To change body of generated methods, choose Tools | Templates.
            try {
                if (i == 1) 
                    recieveURL();
                else {   
                    new ServerSide().setVisible(true);
                }
            } catch (IOException ex) {
                Logger.getLogger(ServerSide.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        footerLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cacheTable = new javax.swing.JTable();
        webCachetableHeading = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cacheHitRate = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cacheMissRate = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 450));
        jPanel1.setVerifyInputWhenFocusTarget(false);

        titleLabel.setBackground(new java.awt.Color(250, 250, 250));
        titleLabel.setFont(new java.awt.Font("SansSerif", 1, 17)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Proxy Server");

        footerLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        footerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        footerLabel.setText("Developed By: Mehdi Raza Rajani (K163904) | Moazzam Maqsood (k163868)");

        cacheTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        cacheTable.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        cacheTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr#", "URL", "Occurence", "Last Hit Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cacheTable.setToolTipText("");
        jScrollPane1.setViewportView(cacheTable);

        webCachetableHeading.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        webCachetableHeading.setText("Web Cache Table");

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        jLabel2.setText("Cache Hit Rate:");

        cacheHitRate.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        cacheHitRate.setText("0.0 %");

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        jLabel1.setText("Cache Miss Rate:");

        cacheMissRate.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        cacheMissRate.setText("0.0 %");

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(footerLabel, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(webCachetableHeading, javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cacheHitRate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cacheMissRate)
                .addGap(65, 65, 65))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(cacheHitRate)
                    .addComponent(jLabel1)
                    .addComponent(cacheMissRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(webCachetableHeading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(footerLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jButton1.getText().equals("Start")){
            try {
                ss = new ServerSocket(port);
                System.out.println("Server is listening to port : " + port);
                Socket s = ss.accept();
                in = new DataInputStream(s.getInputStream());
                out = new DataOutputStream(s.getOutputStream());
                dos = new PrintStream(s.getOutputStream());
                jButton1.setText("Refresh");
                for (int i = 0; i < 3; i++) {
                    recieveURL();                
                }
    
//                new Thread(() -> {
//                    // Runs inside of the Swing UI thread
//                    SwingUtilities.invokeLater(() -> {
//                        try {
//                            recieveURL();
//                        } catch (IOException ex) {
//                            Logger.getLogger(ClientSide.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                    });
//                }).start();
            } catch (IOException ex) {
                Logger.getLogger(ServerSide.class.getName()).log(Level.SEVERE, null, ex);
            }            
        } else {
            for (int i = 0; i < 3; i++) {
                try {                
                    recieveURL();
                } catch (IOException ex) {
                    Logger.getLogger(ServerSide.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ServerSide().setVisible(true);
        });
    }
    
    private void recieveURL() throws IOException{
        String str1 = in.readLine();
        System.out.println("Message Received: " + str1);
        dos.println(cache.add(str1));
        cache.display();
        updateGUI();
    }
    
    public void updateGUI() {
        if (!SwingUtilities.isEventDispatchThread()) {
          SwingUtilities.invokeLater(this::updateGUI);
          return;
        }
        model_info.setRowCount(0);
        Iterator iterate_value = cache.cache.iterator();
        double total = cache.cacheHit + cache.cacheMiss;
        String cH = String.valueOf(cache.cacheHit / total * 100 ) + " %";
        String cM = String.valueOf(cache.cacheMiss / total * 100 ) + " %";
        cacheHitRate.setText(cH);
        cacheMissRate.setText(cM);
        int i = 0;
        while (iterate_value.hasNext()){
            WebFile current = (WebFile) iterate_value.next();
            Object[] data = {String.valueOf(++i),current.url,String.valueOf(current.occ),current.lastHitDate};
            model_info.addRow(data);
//            System.out.println(iterate_value.next());
        }  
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cacheHitRate;
    private javax.swing.JLabel cacheMissRate;
    private javax.swing.JTable cacheTable;
    private javax.swing.JLabel footerLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel webCachetableHeading;
    // End of variables declaration//GEN-END:variables
}
